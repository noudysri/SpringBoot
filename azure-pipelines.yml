pool:
  vmImage: ubuntu-latest


trigger: none
pr: none

# variables:
#   - group: vartest
#   - name: filetodelete
#     value: filetodelete
#   - name: mystorage
#     value: mystorage616
#   - name: accountkey
#     value: kHX64beg95HB/H0dD7IE0vv3+pRCMsdGnJFyjVP8GRIj2prvRLscEletnKplxF6MOEJdinVS30SL+AStTzBCdA==
#   - name: string-connect
#     value: DefaultEndpointsProtocol=https;AccountName=mystorage616;AccountKey=kHX64beg95HB/H0dD7IE0vv3+pRCMsdGnJFyjVP8GRIj2prvRLscEletnKplxF6MOEJdinVS30SL+AStTzBCdA==;EndpointSuffix=core.windows.net
 
stages:
  - stage:
    jobs:
      - job:
        steps:
            - task: AzurePowerShell@5
              inputs:
                azureSubscription: 'Azure subscription 1(0bb04acb-8639-4207-ab1c-2cbab5516176)'
                ScriptType: 'InlineScript'
                Inline: 'Install-Module Az.Accounts -Scope CurrentUser -Force'
                azurePowerShellVersion: 'LatestVersion'

            - task: AzurePowerShell@5
              inputs:
                azureSubscription: 'Azure subscription 1(0bb04acb-8639-4207-ab1c-2cbab5516176)'
                ScriptType: 'InlineScript'
                Inline: |
                  $StorageAccountName="mystorage61"  
                  $ResourceGroupName="MYNEWRG6"  
                  $fileshareName = "filetodelete"  
                  
                    $StorageAccountAccessKey = Get-AzStorageAccountKey -ResourceGroupName $ResourceGroupName -AccountName $StorageAccountName | Where-Object {$_.KeyName -eq "key1"}  
                  
                    $ctx = New-AzStorageContext -StorageAccountName $StorageAccountName -StorageAccountKey $StorageAccountAccessKey.Value  
                  
                  $DirIndex = 0  
                  $dirsToList = New-Object System.Collections.Generic.List[System.Object]  
                    
                  # Get share root Dir  
                  $shareroot = Get-AzStorageFile -ShareName $shareName -Path . -context $ctx   
                  $dirsToList += $shareroot   
                    
                  # List files recursively and remove file older than 14 days   
                  While ($dirsToList.Count -gt $DirIndex)  
                  {  
                      $dir = $dirsToList[$DirIndex]  
                      $DirIndex ++  
                      $fileListItems = $dir | Get-AzStorageFile  
                      $dirsListOut = $fileListItems | where {$_.GetType().Name -eq "AzureStorageFileDirectory"}  
                      $dirsToList += $dirsListOut  
                      $files = $fileListItems | where {$_.GetType().Name -eq "AzureStorageFile"}  
                    
                      foreach($file in $files)  
                      {  
                          # Fetch Attributes of each file and output  
                          $task = $file.CloudFile.FetchAttributesAsync()  
                          $task.Wait()  
                    
                          # remove file if it's older than 14 days.  
                          if ($file.CloudFile.Properties.LastModified -lt (9Get-Date).AddDays(0))  
                          {  
                        Write-Host "file :",$file.Name  "is older than 0 days so removing it ..!"   
                              ## print the file LMT  
                              # $file | Select @{ Name = "Uri"; Expression = { $_.CloudFile.SnapshotQualifiedUri} }, @{ Name = "LastModified"; Expression = { $_.CloudFile.Properties.LastModified } }   
                    
                              # remove file  
                              $file | Remove-AzStorageFile  
                          }  
                      }  
                      #Debug log  
                      # Write-Host  $DirIndex $dirsToList.Length  $dir.CloudFileDirectory.SnapshotQualifiedUri.ToString()   
                  }

        # - task: AzureCLI@2
        #   inputs:
        #     azureSubscription: 'Azure subscription 1(0bb04acb-8639-4207-ab1c-2cbab5516176)'
        #     scriptType: 'bash'
        #     scriptLocation: 'inlineScript'
        #   # - task: AzurePowerShell@5
          #   inputs:
          #     azureSubscription: 'Azure subscription 1(1)(0bb04acb-8639-4207-ab1c-2cbab5516176)'
          #     ScriptType: 'InlineScript'
          #     Inline: |
          #       # $filelist = az storage file list -s $(filetodelete) --account-name $(mystorage) --account-key $(accountKey) --connection-string $(string-connect)
          #       #     $fileArray = $filelist | ConvertFrom-Json
          #       #     foreach ($file in $fileArray | Where-Object {$_.properties.lastWriteTime.DateTime -lt ((Get-Date).AddDays(0))})
          #       #     {
          #       #         $removefile = $file.name
          #       #         if ($removefile -ne $null)
          #       #         {
          #       #             Write-Host "Removing file $removefile"
          #       #             az storage file delete -s 'filetodelete' -p $removefile
          #       #         }
          #       #     }
          #       $myshare = "$(filetodelete)" 
          #       $accountName ="$(mystorage)" 
          #       $accountKey =  "$(accountKey)" 

          #       $filelist = az storage file list -s $myshare --account-name $accountName --account-key $accountKey
          #              write-host $filelist
          #       $fileArray = $filelist | ConvertFrom-Json
          #       write-host $fileArray
          #       foreach ($file in $fileArray | Where-Object {$_.properties.lastWriteTime.DateTime -lt ((Get-Date).AddHours(-12))})
          #           {
          #              $removefile = $file.name
          #               write-host $file.name 
          #                 write-host $file.isDirectory 
          #                 if ($removefile -ne $null -And $file.isDirectory -ne "True")
          #               {
          #                   Write-Host "Removing file $removefile"
          #                   az storage file delete -s $myshare -p $removefile --account-name $accountName --account-key $accountKey
          #               }
          #           }
          #       foreach ($folder in $fileArray | Where-Object {$_.isDirectory -eq "True"})
          #           {
          #               $removefolder = $folder.name
          #               $filelist = az storage file list -s $myshare --account-name $accountName --account-key $accountKey --path $removefolder
          #               $fileArray = $filelist | ConvertFrom-Json
               
          #               write-host $fileArray
          #               foreach ($file in $fileArray | Where-Object {$_.properties.lastWriteTime.DateTime -lt ((Get-Date).AddHours(-12))})
          #                   {
          #                       $removefile = $file.name
          #                       write-host $file.name 
          #                         write-host $file.isDirectory 
          #                       if ($removefile -ne $null -And $file.isDirectory -ne "True")
          #                       {
          #                           Write-Host "Removing file $removefile"
          #                           az storage file delete -s $myshare -p  $removefolder/$removefile --account-name $accountName --account-key $accountKey
          #                       }
          #           }
          #           }    
          #     azurePowerShellVersion: 'LatestVersion'
          # # - task: AzureCLI@2
          # #   inputs:
          # #     azureSubscription: 'Azure subscription 1(0bb04acb-8639-4207-ab1c-2cbab5516176)'
          # #     scriptType: 'bash'
          # #     scriptLocation: 'inlineScript'
          # #     inlineScript: |
          # #       $filelist = az storage file list -s $(filetodelete) --account-name $(mystorage) --account-key $(accountKey)
          # #           $fileArray = $filelist | ConvertFrom-Json
          # #           foreach ($file in $fileArray | Where-Object {$_.properties.lastModified.DateTime -lt ((Get-Date).AddDays(-90))})
          # #           {
          # #               $removefile = $file.name
          # #               if ($removefile -ne $null)
          # #               {
          # #                   Write-Host "Removing file $removefile"
          # #                   az storage file delete -s $myshare -p $removefile
          # #               }
          # #           }
          # #     addSpnToEnvironment: true
          #     useGlobalConfig: true
