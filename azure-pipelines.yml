trigger: none

pr: none

pool:
  vmimage: ubuntu-latest

# schedules:
# - cron: "0 2 1-7 * SUN"
#   displayName: 25th 5:30 AM (IST) Every Month
#   branches:
#     include:
#     - master

# - task: PowerShell@2
#   displayName: 'Install Az module'
#   inputs:
#     targetType: 'inline'
#     script: 'Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser'

# - task: PowerShell@2
#   displayName: 'Install Az module'
#   inputs:
#     targetType: 'inline'
#     script: 'Install-Module -Name Az -AllowClobber -Scope CurrentUser'

stages:
- stage: 
  jobs:
    - job:
      steps:
        - task: AzureCLI@2
          inputs:
            azureSubscription: 'Azure subscription 1(0bb04acb-8639-4207-ab1c-2cbab5516176)'
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            inlineScript: |
                  az extension add -n azure-devops  
                  Import-Module -Name Az.Profile -Force
                  filetodelete="filetodelete"
                  mystorage="mystorage616"
                  accountKey="kHX64beg95HB/H0dD7IE0vv3+pRCMsdGnJFyjVP8GRIj2prvRLscEletnKplxF6MOEJdinVS30SL+AStTzBCdA=="
                  $filelist=az storage file list -s $filetodelete --account-name $mystorage --account-key $accountKey
                  $fileArray=$filelist | ConvertFrom-Json
                  foreach ($file in $fileArray | Where-Object {$_.properties.lastModified.DateTime -lt ((Get-Date).AddDays(0))})
                  {
                      $removefile = $file.name
                      if ($removefile -ne $null)
                      {
                          Write-Host "Removing file $removefile"
                          az storage file delete -s $filetodelete -p $removefile
                      }
                  }
      # - task: PowerShell@2
      #   displayName: 'Install Az module'
      #   inputs:
      #     targetType: 'inline'
      #     script: 'Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser'

      # - task: Bash@3
      #   inputs:
      #     targetType: 'inline'
      #     script: |
      #       # Write your commands here     
      #       $PSExecutionPolicyPreference = 'RemoteSigned'

      # - task: PowerShell@2
      #   displayName: 'Install Az module'
      #   inputs:
      #     targetType: 'inline'
      #     script: 'Install-Module -Name Az.Storage -AllowClobber -Scope CurrentUser'

      # - task: PowerShell@2
      #   inputs:
      #     targetType: 'inline'
      #     script: |
      #       $StorageAccountName="mystorage616"  
      #       $ResourceGroupName="MYNEWRG6"  
      #       $fileshareName = "filetodelete"  
            
      #         $StorageAccountAccessKey = Get-AzStorageAccountKey -ResourceGroupName $ResourceGroupName -AccountName $StorageAccountName | Where-Object {$_.KeyName -eq "key1"}  
            
      #         $ctx = New-AzStorageContext -StorageAccountName $StorageAccountName -StorageAccountKey $StorageAccountAccessKey.Value  
            
      #       $DirIndex = 0  
      #       $dirsToList = New-Object System.Collections.Generic.List[System.Object]  
              
      #       # Get share root Dir  
      #       $shareroot = Get-AzStorageFile -ShareName $shareName -Path . -context $ctx   
      #       $dirsToList += $shareroot   
              
      #       # List files recursively and remove file older than 90 days   
      #       While ($dirsToList.Count -gt $DirIndex)  
      #       {  
      #           $dir = $dirsToList[$DirIndex]  
      #           $DirIndex ++  
      #           $fileListItems = $dir | Get-AzStorageFile  
      #           $dirsListOut = $fileListItems | where {$_.GetType().Name -eq "AzureStorageFileDirectory"}  
      #           $dirsToList += $dirsListOut  
      #           $files = $fileListItems | where {$_.GetType().Name -eq "AzureStorageFile"}  
              
      #           foreach($file in $files)  
      #           {  
      #               # Fetch Attributes of each file and output  
      #               $task = $file.CloudFile.FetchAttributesAsync()  
      #               $task.Wait()  
              
      #               # remove file if it's older than 94 days.  
      #               if ($file.CloudFile.Properties.LastModified -lt (9Get-Date).AddDays(0))  
      #               {  
      #             Write-Host "file :",$file.Name  "is older than 0 days so removing it ..!"   
      #                   ## print the file LMT  
      #                   # $file | Select @{ Name = "Uri"; Expression = { $_.CloudFile.SnapshotQualifiedUri} }, @{ Name = "LastModified"; Expression = { $_.CloudFile.Properties.LastModified } }   
              
      #                   # remove file  
      #                   $file | Remove-AzStorageFile  
      #               }  
      #           }  
      #           #Debug log  
      #           # Write-Host  $DirIndex $dirsToList.Length  $dir.CloudFileDirectory.SnapshotQualifiedUri.ToString()   
      #       }

# steps:
#   - task: PowerShell@2
#     inputs:     
#      filePath: "./$(System.DefaultWorkingDirectory)/_noudysri_Ansible-Windows/powershellscript.ps1"


